generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ActivityType {
  note
  call
  email
  whatsapp
  task
}

model Pipeline {
  id        String   @id @default(cuid())
  name      String
  color     String   @default("#16A34A")
  archived  Boolean  @default(false)
  stages    Stage[]
  leads     Lead[]
  createdAt DateTime @default(now())

  @@unique([name])
  @@index([archived])
}

model Stage {
  id         String   @id @default(cuid())
  name       String
  position   Int
  pipeline   Pipeline @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
  pipelineId String
  leads      Lead[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([pipelineId, position])
  @@unique([pipelineId, name])
}

model Lead {
  id         String    @id @default(cuid())
  name       String
  email      String?
  phone      String?
  company    String?
  valueCents Int?
  ownerId    String?
  pipeline   Pipeline @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
  pipelineId String
  stage      Stage?    @relation(fields: [stageId], references: [id], onDelete: SetNull)
  stageId    String?
  activities Activity[]
  archived   Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([archived])
}

model Activity {
  id        String       @id @default(cuid())
  type      ActivityType
  content   String
  dueAt     DateTime?
  createdBy String?
  lead      Lead         @relation(fields: [leadId], references: [id], onDelete: Cascade)
  leadId    String
  createdAt DateTime     @default(now())
}
